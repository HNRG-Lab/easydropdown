{"version":3,"sources":["webpack://easydropdown/webpack/universalModuleDefinition","webpack://easydropdown/webpack/bootstrap","webpack://easydropdown/./node_modules/helpful-merge/dist/index.js","webpack://easydropdown/./src/Shared/Util/dispatchOpen.ts","webpack://easydropdown/./src/Shared/Util/composeClassName.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Constants/ArrayStrategy.js","webpack://easydropdown/./src/Shared/Util/closestParent.ts","webpack://easydropdown/./src/Events/Constants/Selectors.ts","webpack://easydropdown/./src/Shared/Util/isMobilePlatform.ts","webpack://easydropdown/./src/Shared/Util/killSelectReaction.ts","webpack://easydropdown/./src/Easydropdown/cache.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/merge.js","webpack://easydropdown/./node_modules/helpful-merge/dist/Messages.js","webpack://easydropdown/./src/Config/Config.ts","webpack://easydropdown/./src/Shared/Util/Constants/CollisionType.ts","webpack://easydropdown/./src/Events/Constants/KeyCodes.ts","webpack://easydropdown/./src/Events/Handlers/handleWindowClick.ts","webpack://easydropdown/./src/Renderer/Constants/AttributeChangeType.ts","webpack://easydropdown/./src/Renderer/Constants/DomChangeType.ts","webpack://easydropdown/./src/State/Constants/BodyStatus.ts","webpack://easydropdown/./src/State/Constants/ScrollStatus.ts","webpack://easydropdown/./src/State/Group.ts","webpack://easydropdown/./src/State/Option.ts","webpack://easydropdown/./src/umd.ts","webpack://easydropdown/./node_modules/custom-event-polyfill/polyfill.js","webpack://easydropdown/./src/Shared/Polyfills/Element.matches.ts","webpack://easydropdown/./src/Easydropdown/factory.ts","webpack://easydropdown/./src/Easydropdown/Easydropdown.ts","webpack://easydropdown/./node_modules/helpful-merge/dist/Config.js","webpack://easydropdown/./node_modules/helpful-merge/dist/deriveCustomTypeInstance.js","webpack://easydropdown/./node_modules/helpful-merge/dist/FluentMerge.js","webpack://easydropdown/./node_modules/helpful-merge/dist/handleMergeError.js","webpack://easydropdown/./src/Config/Behavior.ts","webpack://easydropdown/./src/Config/Callbacks.ts","webpack://easydropdown/./src/Config/ClassNames.ts","webpack://easydropdown/./src/Events/bindEvents.ts","webpack://easydropdown/./src/Shared/Util/throttle.ts","webpack://easydropdown/./src/Events/EventBinding.ts","webpack://easydropdown/./src/Events/getEventsList.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyClick.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyMousedown.ts","webpack://easydropdown/./src/Events/Handlers/handleBodyMouseover.ts","webpack://easydropdown/./src/Events/Handlers/handleHeadClick.ts","webpack://easydropdown/./src/Shared/Util/detectBodyCollision.ts","webpack://easydropdown/./src/Events/Handlers/handleItemsListScroll.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectBlur.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectFocus.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectInvalid.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownDown.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeydownUp.ts","webpack://easydropdown/./src/Events/Handlers/handleSelectKeypress.ts","webpack://easydropdown/./src/Renderer/Renderer.ts","webpack://easydropdown/./src/Components/root.ts","webpack://easydropdown/./src/Components/body.ts","webpack://easydropdown/./src/Components/group.ts","webpack://easydropdown/./src/Components/option.ts","webpack://easydropdown/./src/Components/head.ts","webpack://easydropdown/./src/Components/arrow.ts","webpack://easydropdown/./src/Components/value.ts","webpack://easydropdown/./src/Shared/Util/createDomElementFromHtml.ts","webpack://easydropdown/./src/Renderer/Dom.ts","webpack://easydropdown/./src/Renderer/domDiff.ts","webpack://easydropdown/./src/Renderer/PatchCommand.ts","webpack://easydropdown/./src/Renderer/domPatch.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectChange.ts","webpack://easydropdown/./src/Shared/Util/pollForSelectMutation.ts","webpack://easydropdown/./src/State/InjectedActions/closeOthers.ts","webpack://easydropdown/./src/State/InjectedActions/scrollToView.ts","webpack://easydropdown/./src/State/StateManager.ts","webpack://easydropdown/./src/State/resolveActions.ts","webpack://easydropdown/./src/State/StateMapper.ts","webpack://easydropdown/./src/State/State.ts","webpack://easydropdown/./src/Easydropdown/Timers.ts","webpack://easydropdown/./src/Easydropdown/EasydropdownFacade.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","merge_1","ArrayStrategy_1","ArrayStrategy","default","dispatchOpen","injectedDetectBodyCollision","actions","config","dom","collisionData","maxVisibleItems","maxVisibleItemsOverride","behavior","isScrollable","item","length","maxBodyHeight","sumItemsHeight","open","type","boundDispatchOpen","tokens","reduce","classNames","token","push","predicate","className","join","el","selector","includeSelf","parent","parentNode","matches","document","body","OPTION","userAgent","isIos","test","isAndroid","isOperaMini","isWindowsPhone","select","timers","clearTimeout","keyingTimeoutId","keying","setTimeout","resetKeying","disabled","focus","Config_1","deriveCustomTypeInstance_1","FluentMerge_1","handleMergeError_1","Messages","merge","target","source","options","isClientSide","sourceKeys","deep","PUSH","REPLACE","indexOf","arrayStrategy","RangeError","INVALID_ARRAY_STRATEGY","TypeError","TYPE_ERROR_TARGET","TYPE_ERROR_SOURCE","Array","isArray","apply","toString","getOwnPropertyNames","_i","sourceKeys_1","descriptor","getOwnPropertyDescriptor","set","includeReadOnly","includeNonEmurable","Node","documentElement","useReferenceIfArray","useReferenceIfTargetUnset","err","errorMessage","preserveTypeIfTargetUnset","keys","forEach","method","_a","args","arguments","createFluent","MERGE_ERROR","offender","suggestion","strategy","callbacks","seal","this","Config","CollisionType","UP","DOWN","SPACE","ENTER","ESC","_","state","isOpen","close","blur","AttributeChangeType","DomChangeType","BodyStatus","ScrollStatus","label","isDisabled","Group","Option","ce","CustomEvent","cancelable","preventDefault","defaultPrevented","Error","e","event","params","evt","origPrevent","bubbles","detail","undefined","createEvent","initCustomEvent","Event","Element","msMatchesSelector","selectElementOrSelector","selectElement","querySelector","HTMLSelectElement","multiple","cachedInstance","instance","factoryFn","decoratedFactory","all","selects","querySelectorAll","destroy","slice","mapFromSelect","renderer","render","proxyActions","closeOthers","scrollToView","handleStateUpdate","eventBindings","pollChangeIntervalId","liveUpdates","pollMutationIntervalId","refresh","nextValue","update","group","option","queryDomRefs","clear","binding","unbind","cacheIndex","splice","cb","onOpen","onClose","onSelect","Easydropdown","constructor","FluentMerge","sources","to","from","with","exec","_this","reduceBestMatch","offendingKeyLower","offendingKey","currBestMatch","currKey","totalMatching","getTotalMatching","toLowerCase","delta","Math","abs","possibleKey","longer","shorter","leftPointer","leftInnerPointer","leftTotalMatching","lastCommonIndex","rightPointer","rightInnerPointer","rightTotalMatching","longerLastIndex","shorterLastIndex","min","message","isSealed","isExtensible","reducer","primer","Infinity","bestMatch","showPlaceholderWhenOpen","openOnFocus","closeOnSelect","useNativeUiOnMobile","loop","clampMaxVisibleItems","Behavior","Callbacks","rootOpen","rootOpenAbove","rootOpenBelow","rootDisabled","rootInvalid","rootFocused","rootHasValue","rootNative","gradientTop","gradientBottom","head","arrow","bodyScrollable","bodyAtTop","bodyAtBottom","itemsList","groupDisabled","groupHasLabel","groupLabel","optionDisabled","optionFocused","optionSelected","ClassNames","bindEvent","handlerParams","eventBindingRaw","eventBinding","boundHandler","handler","throttle","addEventListener","map","delay","timerId","last","now","Date","later","difference","debounce","passive","removeEventListener","EventBinding","stopPropagation","Selectors","optionIndex","selectOption","startClickSelecting","isKeying","focusOption","isUseNativeMode","isClosed","navigator","mapCollisionData","deltaTop","deltaBottom","maxHeight","itemHeight","NONE","largestDelta","max","TOP","BOTTOM","floor","bbHead","getBoundingClientRect","wh","innerHeight","top","bottom","offsetHeight","scrollHeight","scrollTop","topOut","bottomOut","scroll","isClickSelecting","invalidate","keyCode","KeyCodes","isSearching","focusedIndex","metaKey","selectedIndex","iterations","incrementAmount","round","totalOptions","focusedOption","searchResetDuration","includes","searchTimeoutId","search","resetSearch","html","rootElement","Renderer","injectSelect","nextHtml","nextRoot","diffCommand","syncSelectWithValue","classList","remove","parentElement","replaceChild","tempSelect","setAttribute","dispatchEvent","localDom","ref","elements","element","isInvalid","isFocused","hasValue","isOpenAbove","isOpenBelow","isRequired","isAtTop","isAtBottom","styleAttr","groups","groupState","hasLabel","optionState","isSelected","selectedOption","isPlaceholderShown","humanReadableValue","temp","createElement","innerHTML","firstElementChild","totalHeight","Dom","diffAttributeChanges","prev","next","totalAttributes","attributes","attributesMap","attributeChanges","attr1","attr2","sort","attr","change","ADD","REMOVE","EDIT","OUTER","domDiff","totalChildNodes","command","Text","textContent","INNER","newTextContent","HTMLElement","tagName","newNode","outerHTML","FULL","childNodes","childNode","childCommands","newInnerHtml","index","PatchCommand","patchAttributes","raf","requestAnimationFrame","patchAttribute","removeAttribute","domPatch","node","childCommand","lastValue","setInterval","getOptionIndexFromValue","handleMutation","lastOuterHtml","thisInstance","cache","getScrollTop","currentScrollTop","optionOffsetTop","optionHeight","bodyHeight","scrollOffset","remainder","scrollToMiddle","offset","offsetTop","injectedActions","onAction","stateProxy","StateManager","createStateProxy","getPropertyDescriptorsFromValue","proxy","getPrototypeOf","concat","localDescriptors","isAccessorProperty","readPropertyValue","updatePropertyValue","validate","scrollStatus","AT_TOP","AT_BOTTOM","SCROLLED","makeScrollable","makeUnscrollable","collisionType","bodyStatus","OPEN_BELOW","OPEN_ABOVE","CLOSED","optionAtIndex","getOptionFromIndex","shouldScrollToView","useNative","isWithinGroup","required","child","children","getAttribute","HTMLOptionElement","StateMapper","mapGroup","lastGroup","mapOption","selected","HTMLOptGroupElement","j","groupChild","placeholder","isParentGroupDisabled","stateRaw","groupRaw","optionRaw","total","hasPlaceholder","Boolean","find","groupStartIndex","State","clearInterval","Timers","implementation","defineProperties","EasydropdownFacade"],"mappings":"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","file":"easydropdown.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"easydropdown\"] = factory();\n\telse\n\t\troot[\"easydropdown\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nexports.ArrayStrategy = ArrayStrategy_1.default;\nexports.default = merge_1.default;\n//# sourceMappingURL=index.js.map","import Config   from '../../Config/Config';\nimport Dom      from '../../Renderer/Dom';\nimport IActions from '../../State/Interfaces/IActions';\n\nimport detectBodyCollision from './detectBodyCollision';\nimport IDispatchOpen       from './Interfaces/IDispatchOpen';\n\nfunction dispatchOpen(\n    injectedDetectBodyCollision,\n    actions: IActions,\n    config: Config,\n    dom: Dom\n): void {\n    const collisionData = injectedDetectBodyCollision(dom, config);\n\n    const maxVisibleItems = collisionData.maxVisibleItemsOverride > -1 ?\n        collisionData.maxVisibleItemsOverride : config.behavior.maxVisibleItems;\n\n    const isScrollable = dom.item.length > maxVisibleItems;\n    const maxBodyHeight =  dom.sumItemsHeight(maxVisibleItems);\n\n    actions.open(maxBodyHeight, collisionData.type, isScrollable);\n}\n\nconst boundDispatchOpen: IDispatchOpen = dispatchOpen.bind(null, detectBodyCollision);\n\nexport {\n    boundDispatchOpen as default,\n    dispatchOpen\n};","function composeClassName(tokens: Array<string|[boolean, string]>): string {\n    return tokens\n        .reduce((classNames, token) => {\n            if (typeof token === 'string') classNames.push(token);\n            else {\n                const [predicate, className] = token;\n\n                if (predicate) classNames.push(className);\n            }\n\n            return classNames;\n        }, [])\n        .join(' ');\n}\n\nexport default composeClassName;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy;\n(function (ArrayStrategy) {\n    ArrayStrategy[\"PUSH\"] = \"PUSH\";\n    ArrayStrategy[\"REPLACE\"] = \"REPLACE\";\n})(ArrayStrategy || (ArrayStrategy = {}));\nexports.default = ArrayStrategy;\n//# sourceMappingURL=ArrayStrategy.js.map","/**\n * Returns the closest parent of a given element matching the\n * provided selector, optionally including the element itself.\n */\n\nfunction closestParent(\n    el: HTMLElement,\n    selector: string,\n    includeSelf: boolean = false\n): HTMLElement {\n    let parent = el.parentNode as HTMLElement;\n\n    if (includeSelf && el.matches(selector)) {\n        return el;\n    }\n\n    while (parent && parent !== document.body) {\n        if (parent.matches && parent.matches(selector)) {\n            return parent;\n        } else if (parent.parentNode) {\n            parent = parent.parentNode as HTMLElement;\n        } else {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nexport default closestParent;","export const OPTION = '[data-ref~=\"option\"]';","function isMobilePlatform(userAgent: string): boolean {\n    const isIos = /(ipad|iphone|ipod)/gi.test(userAgent);\n    const isAndroid = /android/gi.test(userAgent);\n    const isOperaMini = /opera mini/gi.test(userAgent);\n    const isWindowsPhone = /windows phone/gi.test(userAgent);\n\n    if (isIos || isAndroid || isOperaMini || isWindowsPhone) {\n        return true;\n    }\n\n    return false;\n}\n\nexport default isMobilePlatform;","import IHandlerParams from '../../Events/Interfaces/IHandlerParams';\n\nconst killSelectReaction = (select: HTMLSelectElement, {actions, timers}: IHandlerParams): void => {\n    const keyingResetDuration = 100;\n\n    window.clearTimeout(timers.keyingTimeoutId);\n\n    actions.keying();\n\n    timers.keyingTimeoutId = window.setTimeout(() => actions.resetKeying(), keyingResetDuration);\n\n    select.disabled = true;\n\n    setTimeout(() => {\n        select.disabled = false;\n        select.focus();\n    });\n};\n\nexport default killSelectReaction;","import Easydropdown from './Easydropdown';\n\nconst cache: Easydropdown[] = [];\n\nexport default cache;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Config_1 = require(\"./Config\");\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar deriveCustomTypeInstance_1 = require(\"./deriveCustomTypeInstance\");\nvar FluentMerge_1 = require(\"./FluentMerge\");\nvar handleMergeError_1 = require(\"./handleMergeError\");\nvar Messages = require(\"./Messages\");\nfunction merge(target, source, options) {\n    if (options === void 0) { options = null; }\n    var isClientSide = typeof window !== 'undefined';\n    var sourceKeys = [];\n    var config;\n    if (options instanceof Config_1.default) {\n        config = options;\n    }\n    else {\n        config = new Config_1.default();\n    }\n    if (typeof options === 'boolean' && options === true) {\n        config.deep = true;\n    }\n    else if (options && config !== options && typeof options === 'object') {\n        merge(config, options);\n        if ([ArrayStrategy_1.default.PUSH, ArrayStrategy_1.default.REPLACE].indexOf(config.arrayStrategy) < 0) {\n            throw RangeError(Messages.INVALID_ARRAY_STRATEGY(config.arrayStrategy));\n        }\n    }\n    if (!target || typeof target !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_TARGET(target));\n    }\n    if (!source || typeof source !== 'object') {\n        throw new TypeError(Messages.TYPE_ERROR_SOURCE(source));\n    }\n    if (Array.isArray(source)) {\n        if (config.arrayStrategy === ArrayStrategy_1.default.PUSH) {\n            // Merge arrays via push()\n            target.push.apply(target, source);\n            return target;\n        }\n        for (var i = 0; i < source.length; i++) {\n            sourceKeys.push(i.toString());\n        }\n    }\n    else {\n        sourceKeys = Object.getOwnPropertyNames(source);\n    }\n    for (var _i = 0, sourceKeys_1 = sourceKeys; _i < sourceKeys_1.length; _i++) {\n        var key = sourceKeys_1[_i];\n        var descriptor = Object.getOwnPropertyDescriptor(source, key);\n        // Skip read-only properties\n        if (typeof descriptor.get === 'function' && !descriptor.set && !config.includeReadOnly)\n            continue;\n        // Skip non-enumerable properties\n        if (!descriptor.enumerable && !config.includeNonEmurable)\n            continue;\n        if (!config.deep ||\n            typeof source[key] !== 'object' ||\n            (isClientSide && source[key] instanceof window.Node) ||\n            (isClientSide && source[key] === window.document.body) ||\n            (isClientSide && source[key] === window.document.documentElement) ||\n            source[key] === null ||\n            (Array.isArray(source[key]) && config.useReferenceIfArray) ||\n            (!target[key] && config.useReferenceIfTargetUnset)) {\n            // If:\n            // - Shallow merge\n            // - All non-object primatives\n            // - <html>, <body>, or DOM Nodes\n            // - Null pointers\n            // - Arrays, if `useReferenceIfArray` set\n            // - Target prop null or undefined and `useRererenceIfTargetUnset` set\n            try {\n                target[key] = source[key];\n            }\n            catch (err) {\n                handleMergeError_1.default(err, target, key, config.errorMessage);\n            }\n        }\n        else {\n            // Deep merge objects/arrays\n            if (!Object.prototype.hasOwnProperty.call(target, key) || target[key] === null) {\n                // If property does not exist on target, instantiate an empty\n                // object, custom type or array to merge into\n                try {\n                    target[key] = Array.isArray(source[key]) ?\n                        [] : config.preserveTypeIfTargetUnset ?\n                        deriveCustomTypeInstance_1.default(source[key]) : {};\n                }\n                catch (err) {\n                    handleMergeError_1.default(err, target, key, config.errorMessage);\n                }\n            }\n            // Recursively deep copy objects or arrays\n            merge(target[key], source[key], config);\n        }\n    }\n    return target;\n}\nvar createFluent = function (method) { return function () {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    return (_a = new FluentMerge_1.default())[method].apply(_a, args);\n    var _a;\n}; };\nObject\n    .keys(FluentMerge_1.default.prototype)\n    .forEach(function (method) { return merge[method] = createFluent(method); });\nexports.default = merge;\n//# sourceMappingURL=merge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MERGE_ERROR = function (offender, suggestion) {\n    if (suggestion === void 0) { suggestion = ''; }\n    return \"Unknown property \\\"\" + offender + \"\\\"\" + (suggestion ? \". Did you mean \\\"\" + suggestion + \"\\\"?\" : '');\n};\nexports.TYPE_ERROR_TARGET = function (target) {\n    return \"[Helpful Merge] Target \\\"\" + target + \"\\\" must be a valid object\";\n};\nexports.TYPE_ERROR_SOURCE = function (source) {\n    return \"[Helpful Merge] Source \\\"\" + source + \"\\\" must be a valid object\";\n};\nexports.INVALID_ARRAY_STRATEGY = function (strategy) {\n    return \"[Helpful Merge] Invalid array strategy \\\"\" + strategy + \"\\\"\";\n};\n//# sourceMappingURL=Messages.js.map","import Behavior   from './Behavior';\nimport Callbacks  from './Callbacks';\nimport ClassNames from './ClassNames';\nimport IConfig    from './Interfaces/IConfig';\n\nclass Config implements IConfig {\n    public callbacks = new Callbacks();\n    public classNames = new ClassNames();\n    public behavior = new Behavior();\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Config;","enum CollisionType {\n    NONE   = 'NONE',\n    TOP    = 'TOP',\n    BOTTOM = 'BOTTOM'\n}\n\nexport default CollisionType;","export const UP    = 38;\nexport const DOWN  = 40;\nexport const SPACE = 32;\nexport const ENTER = 13;\nexport const ESC   = 27;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleWindowClick(_, {state, actions, dom}: IHandlerParams): void {\n    if (!state.isOpen) return;\n\n    actions.close();\n\n    dom.select.blur();\n}\n\nexport default handleWindowClick;","enum AttributeChangeType {\n    ADD = 'ADD',\n    EDIT = 'EDIT',\n    REMOVE = 'REMOVE'\n}\n\nexport default AttributeChangeType;","export enum DomChangeType {\n    NONE    = 'NONE',\n    FULL    = 'FULL',\n    REPLACE = 'REPLACE',\n    INNER   = 'INNER',\n    OUTER   = 'OUTER'\n}\n\nexport default DomChangeType;","enum BodyStatus {\n    CLOSED     = 'CLOSED',\n    OPEN_ABOVE = 'OPEN_ABOVE',\n    OPEN_BELOW = 'OPEN_BELOW'\n}\n\nexport default BodyStatus;","enum ScrollStatus {\n    AT_TOP    = 'AT_TOP',\n    SCROLLED  = 'SCROLLED',\n    AT_BOTTOM = 'AT_BOTTOM'\n}\n\nexport default ScrollStatus;","import Option from './Option';\n\nclass Group {\n    public label:      string   = '';\n    public options:    Option[] = [];\n    public isDisabled: boolean  = false;\n\n    public get totalOptions(): number {\n        return this.options.length;\n    }\n\n    public get hasLabel(): boolean {\n        return this.label !== '';\n    }\n}\n\nexport default Group;","class Option {\n    public label:      string  = '';\n    public value:      string  = '';\n    public isDisabled: boolean = false;\n}\n\nexport default Option;","import 'custom-event-polyfill';\n\nimport './Shared/Polyfills/Element.matches';\n\nimport factory from './Easydropdown/factory';\n\nmodule.exports = factory;","// Polyfill for creating CustomEvents on IE9/10/11\n\n// code pulled from:\n// https://github.com/d4tocchini/customevent-polyfill\n// https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent#Polyfill\n\n(function() {\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  try {\n    var ce = new window.CustomEvent('test', { cancelable: true });\n    ce.preventDefault();\n    if (ce.defaultPrevented !== true) {\n      // IE has problems with .preventDefault() on custom events\n      // http://stackoverflow.com/questions/23349191\n      throw new Error('Could not prevent default');\n    }\n  } catch (e) {\n    var CustomEvent = function(event, params) {\n      var evt, origPrevent;\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: undefined\n      };\n\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(\n        event,\n        params.bubbles,\n        params.cancelable,\n        params.detail\n      );\n      origPrevent = evt.preventDefault;\n      evt.preventDefault = function() {\n        origPrevent.call(this);\n        try {\n          Object.defineProperty(this, 'defaultPrevented', {\n            get: function() {\n              return true;\n            }\n          });\n        } catch (e) {\n          this.defaultPrevented = true;\n        }\n      };\n      return evt;\n    };\n\n    CustomEvent.prototype = window.Event.prototype;\n    window.CustomEvent = CustomEvent; // expose definition to window\n  }\n})();\n","if (!Element.prototype.matches) {\n    Element.prototype.matches = (Element.prototype as any).msMatchesSelector;\n}","import IConfig from '../Config/Interfaces/IConfig';\n\nimport cache              from './cache';\nimport Easydropdown       from './Easydropdown';\nimport EasydropdownFacade from './EasydropdownFacade';\nimport IFactory           from './Interfaces/IFactory';\n\nfunction factory(\n    selectElementOrSelector: (HTMLSelectElement|string),\n    options: IConfig = {}\n): EasydropdownFacade {\n    let selectElement = selectElementOrSelector;\n\n    if (typeof selectElementOrSelector === 'string') {\n        selectElement = document.querySelector(selectElementOrSelector) as HTMLSelectElement;\n    }\n\n    if (!(selectElement instanceof HTMLSelectElement)) {\n        throw new TypeError('[EasyDropDown] Invalid select element provided');\n    }\n\n    if (selectElement.multiple) {\n        throw new Error(\n            '[EasyDropDown] EasyDropDown does not support the `multiple`' +\n            ' attribute on select elements.'\n        );\n    }\n\n    for (const cachedInstance of cache) {\n        if (cachedInstance.selectElement === selectElement) {\n            return new EasydropdownFacade(cachedInstance);\n        }\n    }\n\n    const instance = new Easydropdown(selectElement, options);\n\n    // @ts-ignore\n\n    cache.push(instance);\n\n    return new EasydropdownFacade(instance);\n}\n\nfunction decorateFactory(factoryFn: any): IFactory {\n    factoryFn.all = (options: IConfig = {}) => {\n        const selects = document.querySelectorAll('select');\n\n        Array.prototype.forEach.call(selects, select => {\n            const instance = factory(select, options);\n\n            return instance;\n        });\n    };\n\n    factoryFn.destroy = () => {\n        const cacheCopy = cache.slice();\n\n        cacheCopy.forEach(instance => instance.destroy());\n    };\n\n    return factoryFn;\n}\n\nconst decoratedFactory = decorateFactory(factory);\n\nexport default decoratedFactory;","import merge from 'helpful-merge';\r\n\r\nimport Config                 from '../Config/Config';\r\nimport ICallback              from '../Config/Interfaces/ICallback';\r\nimport IConfig                from '../Config/Interfaces/IConfig';\r\nimport ISelectCallback        from '../Config/Interfaces/ISelectCallback';\r\nimport bindEvents             from '../Events/bindEvents';\r\nimport EventBinding           from '../Events/EventBinding';\r\nimport Dom                    from '../Renderer/Dom';\r\nimport Renderer               from '../Renderer/Renderer';\r\nimport dispatchOpen           from '../Shared/Util/dispatchOpen';\r\nimport pollForSelectChange    from '../Shared/Util/pollForSelectChange';\r\nimport pollForSelectMutation  from '../Shared/Util/pollForSelectMutation';\r\nimport closeOthers            from '../State/InjectedActions/closeOthers';\r\nimport scrollToView           from '../State/InjectedActions/scrollToView';\r\nimport IActions               from '../State/Interfaces/IActions';\r\nimport State                  from '../State/State';\r\nimport StateManager           from '../State/StateManager';\r\nimport StateMapper            from '../State/StateMapper';\r\n\r\nimport cache  from './cache';\r\nimport Timers from './Timers';\r\n\r\nclass Easydropdown {\r\n    public actions: IActions;\r\n\r\n    private config: Config;\r\n    private state: State;\r\n    private dom: Dom;\r\n    private eventBindings: EventBinding[];\r\n    private renderer: Renderer;\r\n    private timers: Timers;\r\n\r\n    constructor(selectElement: HTMLSelectElement, options: IConfig) {\r\n        this.config = merge(new Config(), options, true);\r\n        this.state = StateMapper.mapFromSelect(selectElement, this.config);\r\n        this.renderer = new Renderer(this.config.classNames);\r\n        this.dom = this.renderer.render(this.state, selectElement);\r\n        this.timers = new Timers();\r\n\r\n        this.actions = StateManager.proxyActions(this.state, {\r\n            closeOthers: closeOthers.bind(null, this, cache),\r\n            scrollToView: scrollToView.bind(null, this.dom, this.timers)\r\n        }, this.handleStateUpdate.bind(this));\r\n\r\n        this.eventBindings = bindEvents({\r\n            actions: this.actions,\r\n            config: this.config,\r\n            dom: this.dom,\r\n            state: this.state,\r\n            timers: this.timers\r\n        });\r\n\r\n        this.timers.pollChangeIntervalId = pollForSelectChange(this.dom.select, this.state, this.actions, this.config);\r\n\r\n        if (this.config.behavior.liveUpdates) {\r\n            this.timers.pollMutationIntervalId = pollForSelectMutation(\r\n                this.dom.select,\r\n                this.state,\r\n                this.refresh.bind(this)\r\n            );\r\n        }\r\n    }\r\n\r\n    public get selectElement(): HTMLSelectElement {\r\n        return this.dom.select;\r\n    }\r\n\r\n    public get value(): string {\r\n        return this.state.value;\r\n    }\r\n\r\n    public set value(nextValue: string) {\r\n        if (typeof nextValue !== 'string') {\r\n            throw new TypeError('[EasyDropDown] Provided value not a valid string');\r\n        }\r\n\r\n        this.dom.select.value = nextValue;\r\n    }\r\n\r\n    public open(): void {\r\n        dispatchOpen(this.actions, this.config, this.dom);\r\n    }\r\n\r\n    public close(): void {\r\n        this.actions.close();\r\n    }\r\n\r\n    public refresh(): void {\r\n        this.state = merge(\r\n            this.state,\r\n            StateMapper.mapFromSelect(this.dom.select, this.config)\r\n        );\r\n\r\n        this.renderer.update(this.state);\r\n\r\n        this.dom.group.length = this.dom.option.length = this.dom.item.length = 0;\r\n\r\n        Renderer.queryDomRefs(this.dom, ['group', 'option', 'item']);\r\n    }\r\n\r\n    public destroy(): void {\r\n        this.timers.clear();\r\n        this.eventBindings.forEach(binding => binding.unbind());\r\n        this.renderer.destroy();\r\n\r\n        const cacheIndex = cache.indexOf(this);\r\n\r\n        cache.splice(cacheIndex, 1);\r\n    }\r\n\r\n    private handleStateUpdate(state: State, key: keyof State): void {\r\n        const {callbacks} = this.config;\r\n\r\n        let cb: ICallback;\r\n\r\n        this.renderer.update(state, key);\r\n\r\n        switch (key) {\r\n            case 'bodyStatus':\r\n                if (state.isOpen) {\r\n                    cb = callbacks.onOpen;\r\n                } else {\r\n                    cb = callbacks.onClose;\r\n                }\r\n\r\n                if (typeof cb === 'function') cb();\r\n\r\n                break;\r\n            case 'selectedIndex':\r\n                cb = callbacks.onSelect;\r\n\r\n                if (typeof cb === 'function') (cb as ISelectCallback)(state.value);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Easydropdown;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArrayStrategy_1 = require(\"./Constants/ArrayStrategy\");\nvar Messages = require(\"./Messages\");\nvar Config = /** @class */ (function () {\n    function Config() {\n        this.deep = false;\n        this.useReferenceIfTargetUnset = false;\n        this.useReferenceIfArray = false;\n        this.preserveTypeIfTargetUnset = false;\n        this.includeReadOnly = false;\n        this.includeNonEmurable = false;\n        this.arrayStrategy = ArrayStrategy_1.default.REPLACE;\n        this.errorMessage = Messages.MERGE_ERROR;\n        Object.seal(this);\n    }\n    return Config;\n}());\nexports.default = Config;\n//# sourceMappingURL=Config.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction deriveCustoTypeInstance(_a) {\n    var constructor = _a.constructor;\n    if (typeof constructor === 'function' && constructor !== Object) {\n        return new constructor();\n    }\n    return {};\n}\nexports.default = deriveCustoTypeInstance;\n//# sourceMappingURL=deriveCustomTypeInstance.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar merge_1 = require(\"./merge\");\nvar FluentMerge = /** @class */ (function () {\n    function FluentMerge() {\n        this.target = null;\n        this.sources = [];\n        this.config = {};\n    }\n    /**\n     * Supplies a fluent merge instance with a target object to merge into and return.\n     */\n    FluentMerge.prototype.to = function (target) {\n        this.target = target;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with one or more source objects to merge from, in right to left order.\n     */\n    FluentMerge.prototype.from = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i] = arguments[_i];\n        }\n        this.sources = sources;\n        return this;\n    };\n    /**\n     * Supplies a fluent merge instance with a configuration object of one or more options.\n     */\n    FluentMerge.prototype.with = function (options) {\n        this.config = options;\n        return this;\n    };\n    /**\n     * Executes a fluent merge instance, merging all provided sources into the\n     * target, as per any provided configuration, and returning a reference to\n     * the target.\n     */\n    FluentMerge.prototype.exec = function () {\n        var _this = this;\n        return this.sources.reduce(function (target, source) { return merge_1.default(target, source, _this.config); }, this.target || {});\n    };\n    return FluentMerge;\n}());\nexports.default = FluentMerge;\n//# sourceMappingURL=FluentMerge.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction handleMergeError(err, target, offendingKey, message) {\n    // Rethrow if any of the following:\n    // - offending key already exists on target\n    // - object not sealed\n    // - is extensible\n    // - error not a TypeError\n    if (Object.hasOwnProperty.call(target, offendingKey) ||\n        !Object.isSealed(target) ||\n        Object.isExtensible(target) ||\n        !(err instanceof TypeError))\n        throw err;\n    var reducer = reduceBestMatch.bind(null, offendingKey, offendingKey.toLowerCase());\n    var primer = { key: '', delta: Infinity, totalMatching: 0 };\n    // Iterate through keys in target, for each key, compare with\n    // the offending key. Greatest number of matching characters wins.\n    var bestMatch = Object.keys(target).reduce(reducer, primer);\n    var suggestion = bestMatch && bestMatch.totalMatching > 1 ? bestMatch.key : '';\n    throw new TypeError(message(offendingKey, suggestion));\n}\n/**\n * Compares current key with current best match.\n */\nfunction reduceBestMatch(offendingKeyLower, offendingKey, currBestMatch, currKey) {\n    var totalMatching = getTotalMatching(currKey.toLowerCase(), offendingKeyLower);\n    var delta = Math.abs(currKey.length - offendingKey.length);\n    if (totalMatching > currBestMatch.totalMatching ||\n        (totalMatching === currBestMatch.totalMatching && delta < currBestMatch.delta)) {\n        // If a greater number of matching characters, or the same\n        // number, but a lesser delta, usurp the best match\n        return { key: currKey, delta: delta, totalMatching: totalMatching };\n    }\n    return currBestMatch;\n}\n/**\n * Returns the number of common, consecutive characters\n * between two strings.\n */\nfunction getTotalMatching(possibleKey, offendingKey) {\n    var longer = possibleKey.length > offendingKey.length ? possibleKey : offendingKey;\n    var shorter = longer === possibleKey ? offendingKey : possibleKey;\n    var leftPointer = 0;\n    var leftInnerPointer = 0;\n    var leftTotalMatching = 0;\n    var lastCommonIndex = -1;\n    for (; leftPointer < longer.length; leftPointer++) {\n        while (leftTotalMatching === 0 &&\n            longer[leftPointer] !== shorter[leftInnerPointer] &&\n            leftInnerPointer < shorter.length) {\n            // No match at present, move innerPointer through all possible\n            // indices until a match is found\n            leftInnerPointer++;\n        }\n        if (longer[leftPointer] === shorter[leftInnerPointer]) {\n            // Match found\n            if (lastCommonIndex !== leftPointer - 1) {\n                // If beginning of a new match, reset total common\n                leftTotalMatching = 0;\n            }\n            lastCommonIndex = leftPointer;\n            leftTotalMatching++;\n            leftInnerPointer++;\n            // Whole word matched, end\n            if (leftTotalMatching === shorter.length)\n                break;\n        }\n        else if (leftTotalMatching > 1) {\n            // No match, but at least two common characters found, end\n            break;\n        }\n        else {\n            // No match at this index, reset\n            leftTotalMatching = leftInnerPointer = 0;\n        }\n    }\n    lastCommonIndex = -1;\n    var rightPointer = 0;\n    var rightInnerPointer = 0;\n    var rightTotalMatching = 0;\n    var longerLastIndex = longer.length - 1;\n    var shorterLastIndex = shorter.length - 1;\n    // As above, but from right to left\n    for (; rightPointer < longer.length - leftPointer; rightPointer++) {\n        while (rightTotalMatching === 0 &&\n            longer[longerLastIndex - rightPointer] !== shorter[shorterLastIndex - rightInnerPointer] &&\n            rightInnerPointer < shorter.length) {\n            rightInnerPointer++;\n        }\n        if (longer[longerLastIndex - rightPointer] === shorter[shorterLastIndex - rightInnerPointer]) {\n            if (lastCommonIndex !== rightPointer - 1)\n                rightTotalMatching = 0;\n            lastCommonIndex = rightPointer;\n            rightTotalMatching++;\n            rightInnerPointer++;\n        }\n        else if (rightTotalMatching > 1) {\n            break;\n        }\n        else {\n            rightTotalMatching = rightInnerPointer = 0;\n        }\n    }\n    return Math.min(shorter.length, leftTotalMatching + rightTotalMatching);\n}\nexports.getTotalMatching = getTotalMatching;\nexports.default = handleMergeError;\n//# sourceMappingURL=handleMergeError.js.map","import IBehavior from './Interfaces/IBehavior';\n\nclass Behavior implements IBehavior {\n    public showPlaceholderWhenOpen: boolean = false;\n    public openOnFocus:             boolean = false;\n    public closeOnSelect:           boolean = true;\n    public useNativeUiOnMobile:     boolean = true;\n    public loop:                    boolean = false;\n    public clampMaxVisibleItems:    boolean = true;\n    public liveUpdates:             boolean = false;\n    public maxVisibleItems:         number  = 15;\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default Behavior;","import ICallback from './Interfaces/ICallback';\r\n\r\nclass Callbacks {\r\n    public onOpen:   ICallback = null;\r\n    public onClose:  ICallback = null;\r\n    public onSelect: ICallback = null;\r\n\r\n    constructor() {\r\n        Object.seal(this);\r\n    }\r\n}\r\n\r\nexport default Callbacks;","import IClassNames from './Interfaces/IClassNames';\n\nclass ClassNames implements IClassNames {\n    public root:           string = 'edd-root';\n    public rootOpen:       string = 'edd-root-open';\n    public rootOpenAbove:  string = 'edd-root-open-above';\n    public rootOpenBelow:  string = 'edd-root-open-below';\n    public rootDisabled:   string = 'edd-root-disabled';\n    public rootInvalid:    string = 'edd-root-invalid';\n    public rootFocused:    string = 'edd-root-focused';\n    public rootHasValue:   string = 'edd-root-has-value';\n    public rootNative:     string = 'edd-root-native';\n    public gradientTop:    string = 'edd-gradient-top';\n    public gradientBottom: string = 'edd-gradient-bottom';\n    public head:           string = 'edd-head';\n    public value:          string = 'edd-value';\n    public arrow:          string = 'edd-arrow';\n    public select:         string = 'edd-select';\n    public body:           string = 'edd-body';\n    public bodyScrollable: string = 'edd-body-scrollable';\n    public bodyAtTop:      string = 'edd-body-at-top';\n    public bodyAtBottom:   string = 'edd-body-at-bottom';\n    public itemsList:      string = 'edd-items-list';\n    public group:          string = 'edd-group';\n    public groupDisabled:  string = 'edd-group-disabled';\n    public groupHasLabel:  string = 'edd-group-has-label';\n    public groupLabel:     string = 'edd-group-label';\n    public option:         string = 'edd-option';\n    public optionDisabled: string = 'edd-option-disabled';\n    public optionFocused:  string = 'edd-option-focused';\n    public optionSelected: string = 'edd-option-selected';\n\n    constructor() {\n        Object.seal(this);\n    }\n}\n\nexport default ClassNames;","import throttle from '../Shared/Util/throttle';\n\nimport EventBinding   from './EventBinding';\nimport getEventsList  from './getEventsList';\nimport IEventBinding  from './Interfaces/IEventBinding';\nimport IHandlerParams from './Interfaces/IHandlerParams';\n\nfunction bindEvent(handlerParams: IHandlerParams, eventBindingRaw: IEventBinding): EventBinding {\n    const eventBinding = new EventBinding(eventBindingRaw);\n\n    if (!eventBinding.target) return eventBinding;\n\n    const boundHandler = (e) => eventBinding.handler(e, handlerParams);\n\n    if (eventBinding.throttle > 0) {\n        eventBinding.boundHandler = throttle(boundHandler, eventBinding.throttle);\n    } else {\n        eventBinding.boundHandler = boundHandler;\n    }\n\n    eventBinding.target.addEventListener(eventBinding.type, eventBinding.boundHandler);\n\n    return eventBinding;\n}\n\nfunction bindEvents(handlerParams: IHandlerParams): EventBinding[] {\n    return getEventsList(handlerParams.dom).map(bindEvent.bind(null, handlerParams));\n}\n\nexport {\n    bindEvents as default,\n    bindEvent\n};","function throttle(\n    handler: (...args: any[]) => void,\n    delay: number\n): (...args: any[]) => void {\n    let timerId = null;\n    let last: number = -Infinity;\n\n    return function(...args): void {\n        const now = Date.now();\n\n        const later = () => {\n            timerId = null;\n\n            handler.apply(this, args);\n\n            last = now;\n        };\n\n        const difference = now - last;\n\n        if (difference >= delay) {\n            later();\n        } else {\n            clearTimeout(timerId);\n\n            timerId = setTimeout(later, delay - difference);\n        }\n    };\n}\n\nexport default throttle;","import merge from 'helpful-merge';\n\nimport IEventBinding from './Interfaces/IEventBinding';\nimport IEventHandler from './Interfaces/IEventHandler';\n\nclass EventBinding implements IEventBinding {\n    public type:         string        = '';\n    public target:       HTMLElement   = null;\n    public debounce:     number        = 0;\n    public throttle:     number        = 0;\n    public handler:      IEventHandler = null;\n    public boundHandler: EventListener = null;\n    public passive:      boolean       = false;\n\n    constructor(eventBindingRaw: IEventBinding|string) {\n        merge(this, eventBindingRaw);\n\n        Object.seal(this);\n    }\n\n    public unbind(): void {\n        if (!this.target) return;\n\n        this.target.removeEventListener(this.type, this.boundHandler);\n    }\n}\n\nexport default EventBinding;","import Dom from '../Renderer/Dom';\n\nimport handleBodyClick       from './Handlers/handleBodyClick';\nimport handleBodyMousedown   from './Handlers/handleBodyMousedown';\nimport handleBodyMouseover   from './Handlers/handleBodyMouseover';\nimport handleHeadClick       from './Handlers/handleHeadClick';\nimport handleItemsListScroll from './Handlers/handleItemsListScroll';\nimport handleSelectBlur      from './Handlers/handleSelectBlur';\nimport handleSelectFocus     from './Handlers/handleSelectFocus';\nimport handleSelectInvalid   from './Handlers/handleSelectInvalid';\nimport handleSelectKeydown   from './Handlers/handleSelectKeydown';\nimport handleSelectKeypress  from './Handlers/handleSelectKeypress';\nimport handleWindowClick     from './Handlers/handleWindowClick';\nimport handleWindowResize    from './Handlers/handleWindowClick';\nimport IEventBinding         from './Interfaces/IEventBinding';\n\nconst getEventsList = (dom: Dom): IEventBinding[] => [\n    {\n        target: dom.head,\n        type: 'click',\n        handler: handleHeadClick\n    },\n    {\n        target: dom.body,\n        type: 'mousedown',\n        handler: handleBodyMousedown\n    },\n    {\n        target: dom.body,\n        type: 'click',\n        handler: handleBodyClick\n    },\n    {\n        target: dom.body,\n        type: 'mouseover',\n        handler: handleBodyMouseover\n    },\n    {\n        target: dom.itemsList,\n        type: 'scroll',\n        handler: handleItemsListScroll\n    },\n    {\n        target: dom.select,\n        type: 'keydown',\n        handler: handleSelectKeydown\n    },\n    {\n        target: dom.select,\n        type: 'invalid',\n        handler: handleSelectInvalid\n    },\n    {\n        target: dom.select,\n        type: 'keypress',\n        handler: handleSelectKeypress\n    },\n    {\n        target: dom.select,\n        type: 'focus',\n        handler: handleSelectFocus\n    },\n    {\n        target: dom.select,\n        type: 'blur',\n        handler: handleSelectBlur\n    },\n    {\n        target: document.documentElement,\n        type: 'click',\n        handler: handleWindowClick\n    },\n    {\n        target: window,\n        type: 'resize',\n        handler: handleWindowResize,\n        throttle: 100\n    }\n];\n\nexport default getEventsList;","import closestParent  from '../../Shared/Util/closestParent';\r\nimport * as Selectors from '../Constants/Selectors';\r\nimport IHandlerParams from '../Interfaces/IHandlerParams';\r\n\r\nfunction handleBodyClick(e: Event, {state, actions, dom, config}: IHandlerParams): void {\r\n    e.stopPropagation();\r\n\r\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\r\n\r\n    if (!option) return;\r\n\r\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\r\n\r\n    actions.selectOption(optionIndex, config.behavior.closeOnSelect);\r\n}\r\n\r\nexport default handleBodyClick;","import closestParent  from '../../Shared/Util/closestParent';\r\nimport * as Selectors from '../Constants/Selectors';\r\nimport IHandlerParams from '../Interfaces/IHandlerParams';\r\n\r\nfunction handleBodyMousedown(e: Event, {actions}: IHandlerParams): void {\r\n    e.stopPropagation();\r\n\r\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\r\n\r\n    if (!option) return;\r\n\r\n    actions.startClickSelecting();\r\n}\r\n\r\nexport default handleBodyMousedown;","import closestParent  from '../../Shared/Util/closestParent';\nimport * as Selectors from '../Constants/Selectors';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleBodyMouseover(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const option = closestParent(e.target as HTMLElement, Selectors.OPTION, true);\n\n    if (!option || state.isKeying) return;\n\n    const optionIndex = Array.prototype.indexOf.call(dom.option, option);\n\n    actions.focusOption(optionIndex);\n}\n\nexport default handleBodyMouseover;","import dispatchOpen     from '../../Shared/Util/dispatchOpen';\r\nimport isMobilePlatform from '../../Shared/Util/isMobilePlatform';\r\nimport IHandlerParams   from '../Interfaces/IHandlerParams';\r\n\r\nfunction handleHeadClick(e: MouseEvent, {state, actions, dom, config}: IHandlerParams): void {\r\n    if (state.isUseNativeMode) return;\r\n\r\n    e.stopPropagation();\r\n\r\n    if (state.isClosed) {\r\n        dispatchOpen(actions, config, dom);\r\n\r\n        if (!isMobilePlatform(window.navigator.userAgent)) {\r\n            dom.select.focus();\r\n        } else {\r\n            actions.focus();\r\n        }\r\n    } else {\r\n        if (isMobilePlatform(window.navigator.userAgent)) {\r\n            actions.blur();\r\n        }\r\n        actions.close();\r\n    }\r\n}\r\n\r\nexport default handleHeadClick;","import Config from '../../Config/Config';\nimport Dom    from '../../Renderer/Dom';\n\nimport CollisionType  from './Constants/CollisionType';\nimport ICollisionData from './Interfaces/ICollisionData';\n\nconst CLEARSPACE = 10;\n\nfunction mapCollisionData(deltaTop, deltaBottom, maxHeight, itemHeight): ICollisionData {\n    let type = CollisionType.NONE;\n    let maxVisibleItemsOverride = -1;\n\n    if (deltaTop <= maxHeight && deltaBottom <= maxHeight) {\n        const largestDelta = Math.max(deltaBottom, deltaTop);\n\n        type = deltaTop < deltaBottom ? CollisionType.TOP : CollisionType.BOTTOM;\n        maxVisibleItemsOverride = Math.floor(largestDelta / itemHeight);\n    } else if (deltaTop <= maxHeight) {\n        type = CollisionType.TOP;\n    } else if (deltaBottom <= maxHeight) {\n        type = CollisionType.BOTTOM;\n    }\n\n    return {type, maxVisibleItemsOverride};\n}\n\nfunction detectBodyCollision(dom: Dom, config: Config): ICollisionData {\n    const bbHead = dom.head.getBoundingClientRect();\n    const wh = window.innerHeight;\n    const deltaTop = bbHead.top - CLEARSPACE;\n    const deltaBottom = wh - bbHead.bottom - CLEARSPACE;\n\n    if (dom.option.length < 1) return {\n        type: CollisionType.NONE,\n        maxVisibleItemsOverride: -1\n    };\n\n    const maxVisibleItems = Math.min(config.behavior.maxVisibleItems, dom.item.length);\n    const maxHeight = dom.sumItemsHeight(maxVisibleItems);\n    const itemHeight = dom.sumItemsHeight(1);\n\n    return mapCollisionData(deltaTop, deltaBottom, maxHeight, itemHeight);\n}\n\nexport {\n    detectBodyCollision as default,\n    mapCollisionData\n};","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleItemsListScroll(e: Event, {state, actions, dom}: IHandlerParams): void {\n    e.stopPropagation();\n\n    const {offsetHeight, scrollHeight, scrollTop} = dom.itemsList;\n\n    if (scrollTop === 0) {\n        actions.topOut();\n    } else if (scrollTop === scrollHeight - offsetHeight) {\n        actions.bottomOut();\n    } else {\n        actions.scroll();\n    }\n}\n\nexport default handleItemsListScroll;","import IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleSelectBlur(e: Event, {actions, state, config}: IHandlerParams): void {\n    if (state.isKeying) return;\n\n    actions.blur();\n\n    if (config.behavior.openOnFocus && !state.isClickSelecting) actions.close();\n}\n\nexport default handleSelectBlur;","import dispatchOpen   from '../../Shared/Util/dispatchOpen';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nfunction handleSelectFocus(e: Event, {actions, config, dom, state}: IHandlerParams): void {\n    actions.focus();\n\n    if (config.behavior.openOnFocus && !state.isUseNativeMode) {\n        dispatchOpen(actions, config, dom);\n    }\n}\n\nexport default handleSelectFocus;","import IHandlerParams      from '../Interfaces/IHandlerParams';\n\nfunction handleSelectInvalid(e: Event, {actions, config, dom}: IHandlerParams): void {\n    actions.invalidate();\n}\n\nexport default handleSelectInvalid;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport * as KeyCodes      from '../Constants/KeyCodes';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nimport handleSelectKeydownDown from './handleSelectKeydownDown';\nimport handleSelectKeydownUp   from './handleSelectKeydownUp';\n\nfunction handleSelectKeydown(e: KeyboardEvent, handlerParams: IHandlerParams): void {\n    const {keyCode, target} = e;\n    const {state, actions, dom, config} = handlerParams;\n\n    if (state.isUseNativeMode || state.isDisabled) return;\n\n    switch (keyCode) {\n        case KeyCodes.DOWN:\n            handleSelectKeydownDown(e, handlerParams);\n\n            break;\n        case KeyCodes.UP:\n            handleSelectKeydownUp(e, handlerParams);\n\n            break;\n        case KeyCodes.SPACE:\n            if (state.isSearching) {\n                e.stopPropagation();\n\n                return;\n            }\n\n        case KeyCodes.ENTER:\n            e.stopPropagation();\n            e.preventDefault();\n\n            killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n            if (state.isOpen) {\n                actions.selectOption(state.focusedIndex, config.behavior.closeOnSelect);\n            } else {\n                dispatchOpen(actions, config, dom);\n            }\n\n            break;\n        case KeyCodes.ESC:\n            actions.close();\n\n            break;\n    }\n}\n\nexport default handleSelectKeydown;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownDown(\n    e: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {metaKey, target} = e;\n    const {state, dom, actions, config} = handlerParams;\n\n    let focusedIndex: number = state.focusedIndex > -1 ?\n    state.focusedIndex : state.selectedIndex;\n\n    let iterations: number = 0;\n    let incrementAmount: number = 1;\n\n    e.preventDefault();\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleItems)\n        );\n    }\n\n    do {\n        focusedIndex += incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex >= state.totalOptions) {\n            focusedIndex = config.behavior.loop ? 0 : state.totalOptions - 1;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations <= state.totalOptions\n    );\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n\n        return;\n    }\n}\n\nexport default handleSelectKeydownDown;","import dispatchOpen       from '../../Shared/Util/dispatchOpen';\nimport killSelectReaction from '../../Shared/Util/killSelectReaction';\nimport IHandlerParams     from '../Interfaces/IHandlerParams';\n\nfunction handleSelectKeydownUp(\n    e: KeyboardEvent,\n    handlerParams: IHandlerParams\n): void {\n    const {metaKey, target} = e;\n    const {state, config, dom, actions} = handlerParams;\n\n    let focusedIndex = state.focusedIndex > -1 ?\n        state.focusedIndex : state.selectedIndex;\n\n    let iterations = 0;\n    let incrementAmount: number = 1;\n\n    e.preventDefault();\n\n    killSelectReaction(target as HTMLSelectElement, handlerParams);\n\n    if (metaKey) {\n        incrementAmount = Math.round(\n            Math.max(state.totalOptions / 2, config.behavior.maxVisibleItems)\n        );\n    }\n\n    do {\n        focusedIndex -= incrementAmount;\n\n        incrementAmount = 1;\n\n        if (focusedIndex < 0) {\n            focusedIndex = config.behavior.loop ? state.totalOptions - 1 : 0;\n        }\n\n        actions.focusOption(focusedIndex, true);\n\n        iterations++;\n    }\n    while (\n        state.focusedOption &&\n        state.focusedOption.isDisabled &&\n        iterations < state.totalOptions\n    );\n\n    if (state.isClosed) {\n        dispatchOpen(actions, config, dom);\n    }\n}\n\nexport default handleSelectKeydownUp;","import * as KeyCodes  from '../Constants/KeyCodes';\nimport IHandlerParams from '../Interfaces/IHandlerParams';\n\nconst SEARCH_RESET_DURATION = 1200;\n\nfunction handleSelectKeypress(\n    {keyCode}: KeyboardEvent,\n    {actions, timers, state}: IHandlerParams,\n    searchResetDuration = SEARCH_RESET_DURATION\n): void {\n    if (state.isUseNativeMode || [KeyCodes.UP, KeyCodes.DOWN].includes(keyCode)) return;\n\n    window.clearTimeout(timers.searchTimeoutId);\n\n    actions.search();\n\n    timers.searchTimeoutId = window.setTimeout(() => actions.resetSearch(), searchResetDuration);\n}\n\nexport default handleSelectKeypress;","import root                     from '../Components/root';\nimport ClassNames               from '../Config/ClassNames';\nimport createDomElementFromHtml from '../Shared/Util/createDomElementFromHtml';\nimport State                    from '../State/State';\n\nimport Dom      from './Dom';\nimport domDiff  from './domDiff';\nimport domPatch from './domPatch';\n\nclass Renderer {\n    public classNames: ClassNames;\n    public dom: Dom;\n\n    constructor(classNames: ClassNames) {\n        this.dom = new Dom();\n        this.classNames = classNames;\n    }\n\n    public render(state: State, selectElement: HTMLSelectElement): Dom {\n        const html = root(state, this.classNames);\n        const rootElement = createDomElementFromHtml(html) as HTMLDivElement;\n\n        this.dom = new Dom();\n        this.dom.root = rootElement;\n\n        this.dom.option.length = this.dom.group.length = 0;\n\n        Renderer.queryDomRefs(this.dom);\n\n        this.injectSelect(selectElement);\n\n        return this.dom;\n    }\n\n    public update(state: State, key?: keyof State): void {\n        const nextHtml = root(state, this.classNames);\n        const nextRoot = createDomElementFromHtml(nextHtml) as HTMLDivElement;\n        const diffCommand = domDiff(this.dom.root, nextRoot);\n\n        domPatch(this.dom.root, diffCommand);\n\n        if (key === 'selectedIndex') {\n            this.syncSelectWithValue(state.value);\n        }\n    }\n\n    public destroy(): void {\n        this.dom.select.classList.remove(this.classNames.select);\n\n        try {\n            this.dom.root.parentElement.replaceChild(this.dom.select, this.dom.root);\n        } catch (err) { /**/ }\n    }\n\n    private injectSelect(selectElement: HTMLSelectElement): void {\n        const parent = selectElement.parentElement;\n        const tempSelect = this.dom.select;\n\n        if (!parent) throw new Error('[EasyDropDown] The provided `<select>` element must exist within a document');\n\n        parent.replaceChild(this.dom.root, selectElement);\n\n        tempSelect.parentElement.replaceChild(selectElement, tempSelect);\n        selectElement.className = this.classNames.select;\n        selectElement.setAttribute('aria-hidden', 'true');\n\n        this.dom.select = selectElement;\n    }\n\n    private syncSelectWithValue(value: string): void {\n        if (this.dom.select.value === value) return;\n\n        const event = new CustomEvent('change', {\n            bubbles: true\n        });\n\n        this.dom.select.value = value;\n\n        this.dom.select.dispatchEvent(event);\n    }\n\n    public static queryDomRefs(dom: Dom, keys: string[] = Object.keys(dom)): Dom {\n        return keys\n            .reduce((localDom: Dom, ref: string) => {\n                const selector = `[data-ref~=\"${ref}\"]`;\n                const elements = localDom.root.querySelectorAll(selector);\n\n                if (elements.length < 1 || ref === 'root') return localDom;\n\n                const element = elements[0];\n                const value = localDom[ref];\n\n                if (value === null) {\n                    localDom[ref] = element;\n                } else if (Array.isArray(value)) {\n                    Array.prototype.push.apply(value, elements);\n                }\n\n                return localDom;\n            }, dom);\n    }\n}\n\nexport default Renderer;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport State            from '../State/State';\n\nimport body from './body';\nimport head from './head';\n\nconst root = (state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.root,\n        [state.isDisabled, classNames.rootDisabled],\n        [state.isInvalid, classNames.rootInvalid],\n        [state.isOpen, classNames.rootOpen],\n        [state.isFocused, classNames.rootFocused],\n        [state.hasValue, classNames.rootHasValue],\n        [state.isOpenAbove, classNames.rootOpenAbove],\n        [state.isOpenBelow, classNames.rootOpenBelow],\n        [state.isUseNativeMode, classNames.rootNative]\n    ]);\n\n    return (`\n        <div\n            class=\"${className}\"\n            role=\"widget combobox\"\n            aria-haspopup=\"listbox\"\n            ${state.isOpen ? 'aria-expanded=\"true\"' : ''}\n            ${state.isRequired ? 'aria-required=\"true\"' : ''}\n            ${state.isDisabled ? 'aria-disabled=\"true\"' : ''}\n            ${state.isInvalid ? 'aria-invalid=\"true\"' : ''}\n        >\n            ${head(state, classNames)}\n            ${state.isUseNativeMode ? '' : body(state, classNames)}\n        </div>\n    `);\n};\n\nexport default root;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport State            from '../State/State';\n\nimport group from './group';\n\nfunction body(state: State, classNames: ClassNames): string {\n    const className = composeClassName([\n        classNames.body,\n        [state.isAtTop, classNames.bodyAtTop],\n        [state.isAtBottom, classNames.bodyAtBottom],\n        [state.isScrollable, classNames.bodyScrollable]\n    ]);\n\n    const styleAttr = state.isOpen ?\n        `style=\"max-height: ${state.maxBodyHeight}px;\"` : '';\n\n    return (`\n        <div\n            class=\"${className}\"\n            data-ref=\"body\"\n            role=\"listbox\"\n            ${state.isOpen ? '' : 'aria-hidden'}\n        >\n            <div class=\"${classNames.itemsList}\"\n                data-ref=\"itemsList\"\n                ${styleAttr}>\n                ${state.groups.map(groupState => group(groupState, state, classNames)).join('')}\n            </div>\n            <div class=${classNames.gradientTop} role=\"presentation\"></div>\n            <div class=${classNames.gradientBottom} role=\"presentation\"></div>\n        </div>\n    `);\n}\n\nexport default body;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport Group            from '../State/Group';\nimport State            from '../State/State';\n\nimport option from './option';\n\nconst group = (groupState: Group, state: State, classNames: ClassNames) => {\n    const className = composeClassName([\n        classNames.group,\n        [groupState.isDisabled, classNames.groupDisabled],\n        [groupState.hasLabel, classNames.groupHasLabel]\n    ]);\n\n    return (`\n        <div class=\"${className}\" data-ref=\"group\" role=\"group\">\n            ${groupState.hasLabel ?\n                `<div class=\"${classNames.groupLabel}\" data-ref=\"item\">${groupState.label}</div>` : ''\n            }\n            ${groupState.options.map(optionState => option(optionState, state, classNames)).join('')}\n        </div>\n    `);\n};\n\nexport default group;","import ClassNames       from '../Config/ClassNames';\nimport composeClassName from '../Shared/Util/composeClassName';\nimport Option           from '../State/Option';\nimport State            from '../State/State';\n\nfunction option(optionState: Option, state: State, classNames: ClassNames): string {\n    const isSelected = state.selectedOption === optionState;\n\n    const className = composeClassName([\n        classNames.option,\n        [isSelected, classNames.optionSelected],\n        [optionState === state.focusedOption, classNames.optionFocused],\n        [optionState.isDisabled, classNames.optionDisabled]\n    ]);\n\n    return (`\n        <div\n            class=\"${className}\"\n            data-ref=\"option item\"\n            role=\"option\"\n            title=\"${optionState.label}\"\n            ${isSelected ? 'aria-selected=\"true\"' : ''}\n            ${optionState.isDisabled ? 'aria-disabled=\"true\"' : ''}\n            >\n                ${optionState.label}\n        </div>\n    `);\n}\n\nexport default option;","import ClassNames from '../Config/ClassNames';\nimport State      from '../State/State';\n\nimport arrow from './arrow';\nimport value from './value';\n\nconst head = (state: State, classNames: ClassNames) => (`\n    <div class=\"${classNames.head}\" data-ref=\"head\">\n        ${value(state, classNames)}\n        ${arrow(state, classNames)}\n        <select class=\"${classNames.select}\" data-ref=\"select\"></select>\n    </div>\n`);\n\nexport default head;","import ClassNames from '../Config/ClassNames';\n\nconst arrow = (_, classNames: ClassNames) => `<div class=\"${classNames.arrow}\" role=\"presentation\"></div>`;\n\nexport default arrow;","import ClassNames from '../Config/ClassNames';\nimport State      from '../State/State';\n\nconst value = (state: State, classNames: ClassNames) => {\n    return (`\n        <div\n            class=\"${classNames.value}\"\n            data-ref=\"value\"\n            ${state.isPlaceholderShown ? `aria-placeholder=\"${state.humanReadableValue}\"` : ''}\n        >\n            ${state.humanReadableValue}\n        </div>\n    `);\n};\n\nexport default value;","function createDomElementFromHtml(html: string): Element {\n    const temp = document.createElement('div');\n\n    temp.innerHTML = html;\n\n    return temp.firstElementChild;\n}\n\nexport default createDomElementFromHtml;","class Dom {\n    public select:    HTMLSelectElement = null;\n    public root:      HTMLDivElement    = null;\n    public head:      HTMLDivElement    = null;\n    public value:     HTMLDivElement    = null;\n    public body:      HTMLDivElement    = null;\n    public arrow:     HTMLDivElement    = null;\n    public itemsList: HTMLDivElement    = null;\n    public item:      HTMLDivElement[]  = [];\n    public group:     HTMLDivElement[]  = [];\n    public option:    HTMLDivElement[]  = [];\n\n    public sumItemsHeight(max: number = Infinity): number {\n        let totalHeight = 0;\n\n        for (let i = 0, item; (item = this.item[i]); i++) {\n            if (i === max) break;\n\n            totalHeight += item.offsetHeight;\n        }\n\n        return totalHeight;\n    }\n}\n\nexport default Dom;","import merge from 'helpful-merge';\n\nimport AttributeChangeType  from './Constants/AttributeChangeType';\nimport DomChangeType        from './Constants/DomChangeType';\nimport IAttributeChange     from './Interfaces/IAttributeChange';\nimport IPatchCommand        from './Interfaces/IPatchCommand';\nimport PatchCommand         from './PatchCommand';\n\nfunction domDiff(prev: Node, next: Node): PatchCommand {\n    let totalChildNodes = -1;\n\n    const command = new PatchCommand();\n\n    if (prev instanceof HTMLSelectElement) {\n        command.type = DomChangeType.NONE;\n\n        return command;\n    }\n\n    if (prev instanceof Text && next instanceof Text) {\n        if (prev.textContent === next.textContent) {\n            command.type = DomChangeType.NONE;\n        } else {\n            command.type = DomChangeType.INNER;\n            command.newTextContent = next.textContent;\n        }\n    } else if (prev instanceof HTMLElement && next instanceof HTMLElement) {\n        if (prev.tagName !== next.tagName) {\n            command.type = DomChangeType.REPLACE;\n            command.newNode = next;\n        } else if (prev.outerHTML === next.outerHTML) {\n            command.type = DomChangeType.NONE;\n        } else if (prev.innerHTML === next.innerHTML) {\n            merge(command, diffAttributeChanges(prev, next));\n        } else {\n            merge(command, diffAttributeChanges(prev, next));\n\n            if (command.attributeChanges.length > 0) {\n                command.type = DomChangeType.FULL;\n            } else {\n                command.type = DomChangeType.INNER;\n            }\n\n            if ((totalChildNodes = prev.childNodes.length) > 0 && totalChildNodes === next.childNodes.length) {\n                for (let i = 0, childNode; (childNode = prev.childNodes[i]); i++) {\n                    command.childCommands.push(domDiff(childNode, next.childNodes[i]));\n                }\n            } else {\n                command.newInnerHtml = next.innerHTML;\n            }\n        }\n    } else {\n        command.type = DomChangeType.REPLACE;\n        command.newNode = next;\n    }\n\n    return command;\n}\n\nfunction diffAttributeChanges(prev: HTMLElement, next: HTMLElement): IPatchCommand {\n    const totalAttributes = Math.max(prev.attributes.length, next.attributes.length);\n    const attributesMap   = {};\n    const undef           = void(0);\n    const attributeChanges: IAttributeChange[] = [];\n\n    for (let i = 0; i < totalAttributes; i++) {\n        const attr1 = prev.attributes[i];\n        const attr2 = next.attributes[i];\n\n        if (attr1 && attributesMap[attr1.name] === undef) {\n            attributesMap[attr1.name] = [];\n        }\n\n        if (attr2 && attributesMap[attr2.name] === undef) {\n            attributesMap[attr2.name] = [];\n        }\n\n        if (attr1) attributesMap[attr1.name][0] = attr1.value;\n        if (attr2) attributesMap[attr2.name][1] = attr2.value;\n    }\n\n    const keys = Object.keys(attributesMap);\n\n    if (keys.length > 1) {\n        keys.sort();\n    }\n\n    for (let i = 0, key; (key = keys[i]); i++) {\n        const attr = attributesMap[key];\n\n        const change: IAttributeChange = {\n            type: null,\n            name: key,\n            value: null\n        };\n\n        if (attr[0] === attr[1]) continue;\n\n        if (attr[0] === undef) {\n            change.type = AttributeChangeType.ADD;\n            change.value = attr[1];\n        } else if (attr[1] === undef) {\n            change.type = AttributeChangeType.REMOVE,\n            change.value = '';\n        } else {\n            change.type = AttributeChangeType.EDIT,\n            change.value = attr[1];\n        }\n\n        attributeChanges.push(change);\n    }\n\n    return {\n        type: DomChangeType.OUTER,\n        attributeChanges\n    };\n}\n\nexport default domDiff;","import DomChangeType    from './Constants/DomChangeType';\nimport IAttributeChange from './Interfaces/IAttributeChange';\n\nclass PatchCommand {\n    public type:             DomChangeType;\n    public newNode:          Node               = null;\n    public newInnerHtml:     string             = '';\n    public newTextContent:   string             = '';\n    public attributeChanges: IAttributeChange[] = [];\n    public childCommands:    PatchCommand[]      = [];\n    public index:            number             = null;\n}\n\nexport default PatchCommand;","import AttributeChangeType from './Constants/AttributeChangeType';\nimport DomChangeType       from './Constants/DomChangeType';\nimport IAttributeChange    from './Interfaces/IAttributeChange';\nimport PatchCommand        from './PatchCommand';\n\nfunction domPatch(node: Node, command: PatchCommand): Node {\n    switch (command.type) {\n        case DomChangeType.NONE:\n            return node;\n        case DomChangeType.REPLACE:\n            node.parentElement.replaceChild(command.newNode, node);\n\n            return command.newNode;\n        case DomChangeType.INNER:\n            if (node instanceof Text) {\n                node.textContent = command.newTextContent;\n            } else if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            return node;\n        case DomChangeType.OUTER:\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n        case DomChangeType.FULL:\n            if (command.childCommands.length > 0) {\n                command.childCommands.forEach((childCommand, i) => domPatch(node.childNodes[i], childCommand));\n            } else {\n                (node as HTMLElement).innerHTML = command.newInnerHtml;\n            }\n\n            patchAttributes(node as HTMLElement, command.attributeChanges);\n\n            return node;\n    }\n}\n\nfunction patchAttributes(el: HTMLElement, attributeChanges: IAttributeChange[]): void {\n    const raf = window.requestAnimationFrame;\n\n    attributeChanges.forEach(change => {\n        if (raf && ['class', 'style'].indexOf(change.name) > -1) {\n            raf(() => patchAttribute(el, change));\n        } else {\n            patchAttribute(el, change);\n        }\n    });\n}\n\nfunction patchAttribute(el: HTMLElement, change: IAttributeChange): void {\n    switch (change.type) {\n        case AttributeChangeType.ADD:\n        case AttributeChangeType.EDIT:\n            el.setAttribute(change.name, change.value);\n\n            break;\n        case AttributeChangeType.REMOVE:\n            el.removeAttribute(change.name);\n\n            break;\n    }\n}\n\nexport default domPatch;","import Config from '../../Config/Config';\nimport IActions from '../../State/Interfaces/IActions';\nimport State    from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 100;\n\nfunction pollForSelectChange(\n    selectElement: HTMLSelectElement,\n    state: State,\n    actions: IActions,\n    config: Config\n): number {\n    let lastValue: string = selectElement.value;\n\n    const pollIntervalId = window.setInterval(() => {\n        if (selectElement.value !== lastValue) {\n            const selectedIndex = state.getOptionIndexFromValue(selectElement.value);\n\n            actions.selectOption(selectedIndex, config.behavior.closeOnSelect);\n            actions.focusOption(selectedIndex, true);\n        }\n\n        lastValue = selectElement.value;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectChange;","import State from '../../State/State';\n\nconst POLL_INTERVAL_DURATION = 300;\n\nfunction pollForSelectMutation(selectElement: HTMLSelectElement, state: State, handleMutation: () => void): number {\n    let lastOuterHtml: string = selectElement.outerHTML;\n\n    const pollIntervalId = window.setInterval(() => {\n        const {outerHTML} = selectElement;\n\n        if (outerHTML !== lastOuterHtml && !state.isKeying) {\n            handleMutation();\n        }\n\n        lastOuterHtml = outerHTML;\n    }, POLL_INTERVAL_DURATION);\n\n    return pollIntervalId;\n}\n\nexport default pollForSelectMutation;","import Easydropdown from '../../Easydropdown/Easydropdown';\n\nfunction closeOthers(thisInstance: Easydropdown, cache: Easydropdown[]): void {\n    for (const instance of cache) {\n        if (instance !== thisInstance) instance.actions.close();\n    }\n}\n\nexport default closeOthers;","import Timers from '../../Easydropdown/Timers';\nimport Dom    from '../../Renderer/Dom';\nimport State  from '../../State/State';\n\nfunction getScrollTop(\n    currentScrollTop: number,\n    optionOffsetTop: number,\n    optionHeight: number,\n    bodyHeight: number,\n    scrollOffset: number\n): number {\n    const max = currentScrollTop + bodyHeight;\n\n    let remainder: number;\n\n    if (optionOffsetTop < currentScrollTop) {\n        return optionOffsetTop - scrollOffset;\n    } else if ((remainder = (optionOffsetTop + optionHeight) - max) > 0) {\n        return currentScrollTop + remainder + scrollOffset;\n    }\n\n    return currentScrollTop;\n}\n\nfunction scrollToView(dom: Dom, timers: Timers, state: State, scrollToMiddle: boolean = false): void {\n    const index = Math.max(0, state.focusedIndex > -1 ? state.focusedIndex : state.selectedIndex);\n    const option = dom.option[index];\n\n    if (!option) return;\n\n    const offset = scrollToMiddle ? (state.maxBodyHeight / 2) - (option.offsetHeight / 2) : 0;\n\n    const scrollTop = getScrollTop(\n        dom.itemsList.scrollTop,\n        option.offsetTop,\n        option.offsetHeight,\n        state.maxBodyHeight,\n        offset\n    );\n\n    if (scrollTop === dom.itemsList.scrollTop) return;\n\n    dom.itemsList.scrollTop = scrollTop;\n}\n\nexport {\n    getScrollTop,\n    scrollToView as default\n};","import merge from 'helpful-merge';\n\nimport IActions            from './Interfaces/IActions';\nimport IOnAction           from './Interfaces/IOnAction';\nimport IPropertyDescriptor from './Interfaces/IPropertyDescriptor';\nimport resolveActions      from './resolveActions';\nimport State               from './State';\n\nclass StateManager {\n    public static proxyActions(state: State, injectedActions: any, onAction: IOnAction): IActions {\n        const stateProxy = StateManager.createStateProxy(state, onAction);\n        const actions = resolveActions(stateProxy);\n\n        merge(actions, injectedActions);\n\n        return actions;\n    }\n\n    private static createStateProxy(state: State, onAction: IOnAction): State {\n        return Object.seal(\n            StateManager\n                .getPropertyDescriptorsFromValue(state, onAction)\n                .reduce((proxy, {key, get, set}) => Object.defineProperty(\n                    proxy,\n                    key,\n                    {\n                        enumerable: true,\n                        get,\n                        set\n                    }\n                ), {})\n        );\n    }\n\n    private static getPropertyDescriptorsFromValue(state: State, onAction: IOnAction): IPropertyDescriptor[] {\n        const prototype = Object.getPrototypeOf(state);\n        const allKeys = Object.keys(state).concat(Object.keys(prototype));\n\n        return allKeys\n            .reduce((localDescriptors, key) => {\n                const propertyDescriptor =\n                    Object.getOwnPropertyDescriptor(state, key) ||\n                    Object.getOwnPropertyDescriptor(prototype, key);\n\n                const isAccessorProperty = typeof propertyDescriptor.get === 'function';\n\n                localDescriptors.push({\n                    get: StateManager.readPropertyValue.bind(null, state, key),\n                    set: isAccessorProperty ?\n                        void 0 : StateManager.updatePropertyValue.bind(null, state, key, onAction),\n                    key\n                });\n\n                return localDescriptors;\n            }, []);\n    }\n\n    private static readPropertyValue(state: State, key: string): any {\n        return state[key];\n    }\n\n    private static updatePropertyValue(state: State, key: string, onAction: IOnAction, value: any): void {\n        if (state[key] === value) return;\n\n        state[key] = value;\n\n        onAction(state, key);\n    }\n}\n\nexport default StateManager;","import CollisionType    from '../Shared/Util/Constants/CollisionType';\r\nimport isMobilePlatform from '../Shared/Util/isMobilePlatform';\r\n\r\nimport BodyStatus   from './Constants/BodyStatus';\r\nimport ScrollStatus from './Constants/ScrollStatus';\r\nimport IActions     from './Interfaces/IActions';\r\nimport State        from './State';\r\n\r\nconst resolveActions = (state: State): IActions => ({\r\n    focus(): void {\r\n        state.isFocused = true;\r\n    },\r\n\r\n    blur(): void {\r\n        state.isFocused = false;\r\n    },\r\n\r\n    invalidate(): void {\r\n        state.isInvalid = true;\r\n    },\r\n\r\n    validate(): void {\r\n        state.isInvalid = false;\r\n    },\r\n\r\n    topOut(): void {\r\n        state.scrollStatus = ScrollStatus.AT_TOP;\r\n    },\r\n\r\n    bottomOut(): void {\r\n        state.scrollStatus = ScrollStatus.AT_BOTTOM;\r\n    },\r\n\r\n    scroll(): void {\r\n        state.scrollStatus = ScrollStatus.SCROLLED;\r\n    },\r\n\r\n    makeScrollable(): void {\r\n        state.isScrollable = true;\r\n    },\r\n\r\n    makeUnscrollable(): void {\r\n        state.isScrollable = false;\r\n    },\r\n\r\n    open(\r\n        this: IActions,\r\n        maxBodyHeight: number,\r\n        collisionType: CollisionType,\r\n        isScrollable: boolean\r\n    ): void {\r\n        if (state.isDisabled) return;\r\n\r\n        this.closeOthers();\r\n\r\n        switch (collisionType) {\r\n            case CollisionType.NONE:\r\n            case CollisionType.TOP:\r\n                state.bodyStatus = BodyStatus.OPEN_BELOW;\r\n\r\n                break;\r\n            case CollisionType.BOTTOM:\r\n                state.bodyStatus = BodyStatus.OPEN_ABOVE;\r\n\r\n                break;\r\n        }\r\n\r\n        state.isScrollable = isScrollable;\r\n        state.maxBodyHeight = maxBodyHeight;\r\n\r\n        this.scrollToView(state, true);\r\n    },\r\n\r\n    close(): void {\r\n        state.bodyStatus = BodyStatus.CLOSED;\r\n        state.focusedIndex = -1;\r\n        if (isMobilePlatform(window.navigator.userAgent)) {\r\n            this.blur();\r\n        }\r\n    },\r\n\r\n    startClickSelecting(): void {\r\n        state.isClickSelecting = true;\r\n    },\r\n\r\n    selectOption(this: IActions, index: number, close = true): void {\r\n        const optionAtIndex = state.getOptionFromIndex(index);\r\n\r\n        state.isClickSelecting = false;\r\n\r\n        if (index > -1 && (!optionAtIndex || optionAtIndex.isDisabled)) return;\r\n\r\n        state.selectedIndex = index;\r\n\r\n        if (state.isInvalid) {\r\n            this.validate();\r\n        }\r\n\r\n        if (state.isSearching) {\r\n            this.scrollToView(state);\r\n        } else if (close) {\r\n            this.close();\r\n        }\r\n    },\r\n\r\n    focusOption(this: IActions, index: number, shouldScrollToView: boolean = false): void {\r\n        const scrollToMiddle = Math.abs(index - state.focusedIndex) > 1;\r\n\r\n        state.focusedIndex = index;\r\n\r\n        if (shouldScrollToView) {\r\n            this.scrollToView(state, scrollToMiddle);\r\n        }\r\n    },\r\n\r\n    search(): void {\r\n        state.isSearching = true;\r\n    },\r\n\r\n    resetSearch(): void {\r\n        state.isSearching = false;\r\n    },\r\n\r\n    keying(): void {\r\n        state.isKeying = true;\r\n    },\r\n\r\n    resetKeying(): void {\r\n        state.isKeying = false;\r\n    },\r\n\r\n    useNative(): void {\r\n        state.isUseNativeMode = true;\r\n    }\r\n});\r\n\r\nexport default resolveActions;","import merge from 'helpful-merge';\n\nimport Config           from '../Config/Config';\nimport isMobilePlatform from '../Shared/Util/isMobilePlatform';\n\nimport Group  from './Group';\nimport Option from './Option';\nimport State  from './State';\n\nclass StateMapper {\n    public static mapFromSelect(selectElement: HTMLSelectElement, config: Config): State {\n        const state = new State(null, config);\n\n        let isWithinGroup = false;\n\n        state.name = selectElement.name;\n        state.isDisabled = selectElement.disabled;\n        state.isRequired = selectElement.required;\n\n        state.isUseNativeMode = (\n            config.behavior.useNativeUiOnMobile &&\n            isMobilePlatform(window.navigator.userAgent)\n        );\n\n        for (let i = 0, child: Element; (child = selectElement.children[i]); i++) {\n            if (i === 0 && child.getAttribute('data-placeholder') !== null) {\n                state.placeholder = child.textContent;\n                (child as HTMLOptionElement).value = '';\n\n                continue;\n            }\n\n            if (child instanceof HTMLOptionElement) {\n                if (isWithinGroup === false) {\n                    state.groups.push(StateMapper.mapGroup());\n\n                    isWithinGroup = true;\n                }\n\n                state.lastGroup.options.push(StateMapper.mapOption(child));\n\n                if (child.selected) state.selectedIndex = state.totalOptions - 1;\n            } else if (child instanceof HTMLOptGroupElement) {\n                isWithinGroup = true;\n\n                state.groups.push(StateMapper.mapGroup(child));\n\n                for (let j = 0, groupChild: Element; (groupChild = child.children[j]); j++) {\n                    state.lastGroup.options.push(\n                        StateMapper.mapOption(\n                            groupChild as HTMLOptionElement,\n                            child as HTMLOptGroupElement\n                        )\n                    );\n\n                    if ((groupChild as HTMLOptionElement).selected) state.selectedIndex = state.totalOptions - 1;\n                }\n\n                isWithinGroup = false;\n            } else {\n                throw new TypeError(\n                    `[EasyDropDown] Invalid child tag \"${child.tagName}\" found in provided \\`<select>\\` element`\n                );\n            }\n        }\n\n        return Object.seal(state);\n    }\n\n    private static mapGroup(group: HTMLOptGroupElement = null): Group {\n        return merge(new Group(), {\n            label: group ? group.label : '',\n            isDisabled: group ? group.disabled : false\n        });\n    }\n\n    private static mapOption(option: HTMLOptionElement, group: HTMLOptGroupElement = null): Option {\n        if (!(option instanceof HTMLOptionElement)) throw new TypeError('[EasyDropDown] Invalid markup structure');\n\n        const isParentGroupDisabled = group !== null && group.disabled;\n\n        return merge(new Option(), {\n            label: option.textContent,\n            value: option.value,\n            isDisabled: option.disabled || isParentGroupDisabled\n        });\n    }\n}\n\nexport default StateMapper;","import merge from 'helpful-merge';\r\n\r\nimport Config from '../Config/Config';\r\n\r\nimport BodyStatus   from './Constants/BodyStatus';\r\nimport ScrollStatus from './Constants/ScrollStatus';\r\nimport Group        from  './Group';\r\nimport Option       from './Option';\r\n\r\nclass State {\r\n    public groups:                  Group[]      = [];\r\n    public focusedIndex:            number       = -1;\r\n    public selectedIndex:           number       = -1;\r\n    public maxVisibleItemsOverride: number       = -1;\r\n    public maxBodyHeight:           number       = -1;\r\n    public name:                    string       = '';\r\n    public placeholder:             string       = '';\r\n    public scrollStatus:            ScrollStatus = ScrollStatus.AT_TOP;\r\n    public bodyStatus:              BodyStatus   = BodyStatus.CLOSED;\r\n    public isDisabled:              boolean      = false;\r\n    public isRequired:              boolean      = false;\r\n    public isInvalid:               boolean      = false;\r\n    public isFocused:               boolean      = false;\r\n    public isUseNativeMode:         boolean      = false;\r\n    public isScrollable:            boolean      = false;\r\n    public isClickSelecting:        boolean      = false;\r\n    public isSearching:             boolean      = false;\r\n    public isKeying:                boolean      = false;\r\n\r\n    private config: Config;\r\n\r\n    constructor(stateRaw: any = null, config = new Config()) {\r\n        this.config = config;\r\n\r\n        if (!stateRaw) return;\r\n\r\n        merge(this, stateRaw);\r\n\r\n        this.groups = this.groups.map((groupRaw) => {\r\n            const group = merge(new Group(), groupRaw);\r\n\r\n            group.options = group.options.map(optionRaw => merge(new Option(), optionRaw));\r\n\r\n            return group;\r\n        });\r\n    }\r\n\r\n    public get totalGroups(): number {\r\n        return this.groups.length;\r\n    }\r\n\r\n    public get lastGroup(): Group {\r\n        return this.groups[this.groups.length - 1];\r\n    }\r\n\r\n    public get totalOptions(): number {\r\n        return this.groups.reduce((total: number, group: Group) => total + group.totalOptions, 0);\r\n    }\r\n\r\n    public get selectedOption(): Option {\r\n        return this.getOptionFromIndex(this.selectedIndex);\r\n    }\r\n\r\n    public get focusedOption(): Option {\r\n        return this.getOptionFromIndex(this.focusedIndex);\r\n    }\r\n\r\n    public get value(): string {\r\n        return this.selectedOption ? this.selectedOption.value : '';\r\n    }\r\n\r\n    public get humanReadableValue(): string {\r\n        if (\r\n            (!this.hasValue && this.hasPlaceholder) ||\r\n            (\r\n                this.config.behavior.showPlaceholderWhenOpen &&\r\n                this.hasPlaceholder &&\r\n                this.isOpen\r\n            )\r\n        ) {\r\n            return this.placeholder;\r\n        }\r\n\r\n        return this.label;\r\n    }\r\n\r\n    public get label(): string {\r\n        return this.selectedOption ? this.selectedOption.label : '';\r\n    }\r\n\r\n    public get hasPlaceholder(): boolean {\r\n        return this.placeholder !== '';\r\n    }\r\n\r\n    public get isPlaceholderShown(): boolean {\r\n        return this.hasPlaceholder && !this.hasValue;\r\n    }\r\n\r\n    public get hasValue(): boolean {\r\n        return this.value !== '';\r\n    }\r\n\r\n    public get isGrouped(): boolean {\r\n        return Boolean(this.groups.find(group => group.hasLabel));\r\n    }\r\n\r\n    public get isOpen(): boolean {\r\n        return this.bodyStatus !== BodyStatus.CLOSED;\r\n    }\r\n\r\n    public get isClosed(): boolean {\r\n        return this.bodyStatus === BodyStatus.CLOSED;\r\n    }\r\n\r\n    public get isOpenAbove(): boolean {\r\n        return this.bodyStatus === BodyStatus.OPEN_ABOVE;\r\n    }\r\n\r\n    public get isOpenBelow(): boolean {\r\n        return this.bodyStatus === BodyStatus.OPEN_BELOW;\r\n    }\r\n\r\n    public get isAtTop(): boolean {\r\n        return this.scrollStatus === ScrollStatus.AT_TOP;\r\n    }\r\n\r\n    public get isAtBottom(): boolean {\r\n        return this.scrollStatus === ScrollStatus.AT_BOTTOM;\r\n    }\r\n\r\n    public getOptionFromIndex(index: number): Option {\r\n        let groupStartIndex = 0;\r\n\r\n        for (const group of this.groups) {\r\n            if (index < 0 ) break;\r\n\r\n            const groupEndIndex = Math.max(0, groupStartIndex + group.totalOptions - 1);\r\n\r\n            if (index <= groupEndIndex) {\r\n                const option = group.options[index - groupStartIndex];\r\n\r\n                return option;\r\n            }\r\n\r\n            groupStartIndex += group.totalOptions;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    public getOptionIndexFromValue(value: string): number {\r\n        let index: number = -1;\r\n\r\n        for (const group of this.groups) {\r\n            for (const option of group.options) {\r\n                index++;\r\n\r\n                if (option.value === value) {\r\n                    return index;\r\n                }\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n}\r\n\r\nexport default State;","class Timers {\n    public pollChangeIntervalId: number;\n    public pollMutationIntervalId: number;\n    public searchTimeoutId: number;\n    public keyingTimeoutId: number;\n\n    public clear(): void {\n        Object.keys(this).forEach(key => window.clearInterval(this[key]));\n    }\n}\n\nexport default Timers;","import Easydropdown from './Easydropdown';\n\nclass EasydropdownFacade {\n    /**\n     * Programmatically opens the dropdown, closing any\n     * other open instances.\n     */\n\n    public open: () => void;\n\n    /**\n     * Programmatically closes the dropdown.\n     */\n\n    public close: () => void;\n\n    /**\n     * Refreshes the instance and updates the DOM in\n     * response to a change in the underlying `<select>`\n     * element (for example, adding or removing an option).\n     */\n\n    public refresh: () => void;\n\n    /**\n     * Destroys the instance by removing all EasyDropDown-generated\n     * elements from the DOM, and unbinding all event handlers.\n     * The underlying select is returned to the root position.\n     */\n\n    public destroy: () => void;\n\n    /**\n     * An accessor property allowing writing to and reading\n     * from the dropdown's value.\n     */\n\n    public value: string;\n\n    constructor(implementation: Easydropdown) {\n        this.open = implementation.open.bind(implementation);\n        this.close = implementation.close.bind(implementation);\n        this.refresh = implementation.refresh.bind(implementation);\n        this.destroy = implementation.destroy.bind(implementation);\n\n        Object.defineProperties(this, {\n            value: {\n                get: () => implementation.value,\n                set: (nextValue: string) => implementation.value = nextValue\n            }\n        });\n    }\n}\n\nexport default EasydropdownFacade;"],"sourceRoot":""}